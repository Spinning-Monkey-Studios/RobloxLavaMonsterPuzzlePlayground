-- Level-aware heal pad: immediate hide, darker UI, reliable bind
local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local RS         = game:GetService("ReplicatedStorage")
local Life       = require(RS:WaitForChild("Life"))

local HEAL_PER_SECOND = 20

local touchCount, loops, guis = {}, {}, {}

local function destroyGui(p) if guis[p] then guis[p]:Destroy(); guis[p]=nil end end
local function createGui(p)
	destroyGui(p)
	local pg = p:FindFirstChild("PlayerGui"); if not pg then return end
	local gui = Instance.new("ScreenGui"); gui.Name="HealGUI"; gui.ResetOnSpawn=false; gui.Parent=pg
	local frame = Instance.new("Frame"); frame.Name="HealFrame"
	frame.Size=UDim2.new(0,330,0,42); frame.Position=UDim2.new(0.5,-165,0,100)
	frame.BackgroundColor3=Color3.fromRGB(8,16,10); frame.BackgroundTransparency=0.15; frame.BorderSizePixel=0
	frame.Parent=gui; Instance.new("UICorner",frame).CornerRadius=UDim.new(0,10)
	local bg = Instance.new("Frame"); bg.Name="BarBackground"
	bg.Size=UDim2.new(1,-12,0.6,0); bg.Position=UDim2.new(0,6,0.2,0)
	bg.BackgroundColor3=Color3.fromRGB(22,32,24); bg.BorderSizePixel=0; bg.Parent=frame
	Instance.new("UICorner",bg).CornerRadius=UDim.new(0,6)
	local fill = Instance.new("Frame"); fill.Name="BarFill"
	fill.Size=UDim2.new(1,0,1,0); fill.BackgroundColor3=Color3.fromRGB(50,160,70)
	fill.BorderSizePixel=0; fill.Parent=bg; Instance.new("UICorner",fill).CornerRadius=UDim.new(0,6)
	local label = Instance.new("TextLabel"); label.Name="HealLabel"
	label.Size=UDim2.new(1,0,1,0); label.BackgroundTransparency=1
	label.TextColor3=Color3.fromRGB(255,140,220); label.TextScaled=true; label.Font=Enum.Font.GothamBold
	label.Text="Health: 100/100"; label.Parent=frame
	guis[p]=gui
end
local function updateGui(p,cur,max)
	local gui = guis[p]; if not gui then return end
	gui.HealFrame.BarBackground.BarFill.Size = UDim2.new(math.clamp(max>0 and cur/max or 1,0,1),0,1,0)
	gui.HealFrame.HealLabel.Text = string.format("Health: %d/%d", math.floor(cur), max)
end

local function stopLoop(p)
	if loops[p] then loops[p]:Disconnect(); loops[p]=nil end
	local hum = p.Character and p.Character:FindFirstChildOfClass("Humanoid")
	if hum then hum:SetAttribute("Status_Healing", false) end
	destroyGui(p)
end
local function ensureLoop(p)
	if loops[p] then return end
	createGui(p)
	loops[p] = RunService.Heartbeat:Connect(function(dt)
		local char = p.Character; local hum = char and char:FindFirstChildOfClass("Humanoid")
		if not hum or hum.Health<=0 then stopLoop(p); return end
		if (touchCount[p] or 0) <= 0 then stopLoop(p); return end -- immediate hide
		hum:SetAttribute("Status_Healing", true)
		Life.Heal(hum, HEAL_PER_SECOND * dt)
		updateGui(p, hum:GetAttribute("LifePoints") or 100, hum:GetAttribute("MaxLifePoints") or 100)
	end)
end

local function onTouched(hit)
	local p = Players:GetPlayerFromCharacter(hit.Parent); if not p then return end
	touchCount[p] = (touchCount[p] or 0) + 1
	ensureLoop(p)
end
local function onTouchEnded(hit)
	local p = Players:GetPlayerFromCharacter(hit.Parent); if not p then return end
	touchCount[p] = math.max(0, (touchCount[p] or 0) - 1)
	if touchCount[p] == 0 then stopLoop(p) end
end

-- Bind to ActiveLevel/SafePlatforms/HealLocation/HealLocation
local zoneConn1, zoneConn2
local function bindHeal()
	if zoneConn1 then zoneConn1:Disconnect(); zoneConn1=nil end
	if zoneConn2 then zoneConn2:Disconnect(); zoneConn2=nil end

	local root = workspace:FindFirstChild("ActiveLevel") or workspace
	local pad = ((root:FindFirstChild("SafePlatforms", true) or root)
		:FindFirstChild("HealLocation", true) or root):FindFirstChild("HealLocation")
	if not (pad and pad:IsA("BasePart")) then
		warn("[HealLocation] Heal pad not found under ActiveLevel.")
		return
	end

	local zone = pad:FindFirstChild("TouchZone")
	if not zone then
		zone = Instance.new("Part")
		zone.Name="TouchZone"; zone.Anchored=true; zone.CanCollide=false; zone.CanQuery=false; zone.CanTouch=true
		zone.Transparency=1; zone.Size = pad.Size + Vector3.new(0,6,0)
		zone.CFrame = pad.CFrame + Vector3.new(0,3,0); zone.Parent = pad
	end

	print("[HealLocation] Bound heal zone:", zone:GetFullName())
	zoneConn1 = zone.Touched:Connect(onTouched)
	zoneConn2 = zone.TouchEnded:Connect(onTouchEnded)
end

bindHeal()
workspace.ChildAdded:Connect(function(c) if c.Name=="ActiveLevel" then task.defer(bindHeal) end end)
workspace.ChildRemoved:Connect(function(c) if c.Name=="ActiveLevel" then bindHeal() end end)

-- Cleanup
local function cleanup(p) touchCount[p]=nil; stopLoop(p) end
Players.PlayerRemoving:Connect(cleanup)
for _,p in ipairs(Players:GetPlayers()) do p.CharacterRemoving:Connect(function() cleanup(p) end) end
Players.PlayerAdded:Connect(function(p) p.CharacterRemoving:Connect(function() cleanup(p) end) end)
